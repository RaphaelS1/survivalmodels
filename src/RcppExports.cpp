// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// C_Akritas
NumericVector C_Akritas(NumericMatrix truth, NumericVector times, NumericVector unique_times, NumericVector FX_train, NumericVector FX_predict, double lambda);
RcppExport SEXP _survivalmodels_C_Akritas(SEXP truthSEXP, SEXP timesSEXP, SEXP unique_timesSEXP, SEXP FX_trainSEXP, SEXP FX_predictSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type truth(truthSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type times(timesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type unique_times(unique_timesSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FX_train(FX_trainSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type FX_predict(FX_predictSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(C_Akritas(truth, times, unique_times, FX_train, FX_predict, lambda));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_survivalmodels_C_Akritas", (DL_FUNC) &_survivalmodels_C_Akritas, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_survivalmodels(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
